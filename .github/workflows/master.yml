# This is a basic workflow to help you get started with Actions

name: website-master

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
      runs-on: ubuntu-latest
      container: node:lts-buster
      steps:
        - uses: actions/checkout@v2
        
        - name: Discord notification start
          env:
            DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          uses: Ilshidur/action-discord@master
          with:
            args: 'Starting build on develop in {{ EVENT_PAYLOAD.repository.full_name }}.'

        - name: Build project
          run: |
            npm install
            npm run build

        - uses: actions/upload-artifact@master
          with:
            name: web-code
            path: dist
            if-no-files-found: error 

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: web-code
          path: dist

      # Add any build steps here. For example:
      # - run: npm ci && npm run build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_CENTROL_BUSINESS }}"
          channelId: live
          target: website
          projectId: centrol-fire
      
      - name: Discord notification end
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: 'Master on {{ EVENT_PAYLOAD.repository.full_name }} has been deployed.  Checkout: https://centrol.io'
